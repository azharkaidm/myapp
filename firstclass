package com.example.azhar.pucaqadmin;

import android.app.Notification;
import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;

public class AdminActivity extends AppCompatActivity implements AsyncResponse, NavigationView.OnNavigationItemSelectedListener, AdapterView.OnItemClickListener {

    final String LOG = "AdminActivity";
    private ArrayList<Transaksi> transaksiList;
    private ListView lvTransaksi;
    NotificationManager nm;
    int iClicks = 3;
    Button btnBeli;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_admin);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.setDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

//////This the timer, if timer end my app will refresh a data from database with cek() method////////
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            @Override
            public void run() {
                runOnUiThread(new Runnable(){
                    @Override
                    public void run(){
                        TextView txtClicks = (TextView) findViewById(R.id.textView2);
                        // task to be done every 1000 milliseconds
                        iClicks = iClicks - 1;
                        txtClicks.setText(String.valueOf(iClicks));
                        if(iClicks == 1){
                            cek();
                        }
                    }
                });

            }
        }, 0, 1000);

        cek();  //call the method cek
    }

    public void cek(){
        HashMap postData = new HashMap();
        postData.put("Post in php", "value");
        postData.put("Post in php", "value");

        PostResponseAsyncTask task = new PostResponseAsyncTask(this, postData);
        task.execute("http://");
    }

    @Override
    public void processFinish(String s) {
        iClicks = 3;
        NotificationCompat.Builder nBuilder = new NotificationCompat.Builder(this);
        lvTransaksi = (ListView) findViewById(R.id.lvTransaksi);

        if(s.contains("tidak")){
            NotificationManager nm = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
            nm.cancel(1);
            lvTransaksi.setVisibility(ListView.GONE);

        }else {
            Intent intent = new Intent(this, other.class).addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
//            TaskStackBuilder taskStackBuilder = TaskStackBuilder.create(getApplicationContext());
//            taskStackBuilder.addParentStack(this);
//            taskStackBuilder.addNextIntent(intent);

//            PendingIntent pendingIntent = taskStackBuilder.getPendingIntent(123, PendingIntent.FLAG_UPDATE_CURRENT);

            nBuilder.setContentTitle("Title");
            nBuilder.setContentText("Text");
            nBuilder.setSmallIcon(R.drawable.cash);
//            nBuilder.setContentIntent(pendingIntent);
            nBuilder.setDefaults(Notification.DEFAULT_SOUND);
            nBuilder.setVibrate(new long[]{100, 2000, 500, 2000});
            nBuilder.setLights(Color.GREEN, 400, 400);

            Notification notification = nBuilder.build();
            nm = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
            nm.notify(1, notification);

            transaksiList = new JsonConverter<Transaksi>().toArrayList(s, Transaksi.class);

            BindDictionary<Transaksi> dict = new BindDictionary<Transaksi>();
            dict.addStringField(R.id.tvNope, new StringExtractor<Transaksi>() {
                @Override
                public String getStringValue(Transaksi transaksi, int position) {
                    return transaksi.nope;
                }
            });

            dict.addStringField(R.id.tvNom, new StringExtractor<Transaksi>() {
                @Override
                public String getStringValue(Transaksi transaksi, int position) {
                    return transaksi.nominal;
                }
            });

            FunDapter<Transaksi> adapter = new FunDapter<>(AdminActivity.this, transaksiList, R.layout.layout_list, dict);

            lvTransaksi.setVisibility(ListView.VISIBLE);
            lvTransaksi.setAdapter(adapter);
            lvTransaksi.setOnItemClickListener(this);
        }
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        Transaksi selectTransaksi = transaksiList.get(position);
        Intent kePro = new Intent(this, other.class);
        kePro.putExtra("myvariabel", (Serializable) selectTransaksi);
        startActivity(kePro);
    }

}
